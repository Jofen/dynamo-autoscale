#!/usr/bin/env ruby

# The simulator script reads from the data/ directory for historic data gathered
# from CloudWatch with the script/historic_data script. Then it will step
# through the data chronologically, dropping you into a REPL with each new
# timeslice.
#
# You will first need to have obtained historic data on the tables in your
# config file. To do this, run:
#
#   $ script/historic_data path/to/config.yml
#
# This script does not change any throughputs on DynamoDB whatsoever. The
# historic script data will hit CloudWatch fairly hard to get its data, though.

require_relative '../config/environment/common'
require 'timecop'
include DynamoAutoscale

if ARGV[0]
  DynamoAutoscale.setup_from_config(ARGV[0], dry_run: true)
elsif ARGV[0].nil?
  STDERR.puts "Usage: script/simulator path/to/config.yml"

  exit 1
elsif ARGV[0] and !File.exists?(ARGV[0])
  STDERR.puts "Usage: script/simulator path/to/config.yml"
  STDERR.puts "Error: The path you specified is to a file that does not exist."

  exit 1
end

DynamoAutoscale.poller.run do |table, time, datum|
  Timecop.travel(time)

  puts "Event at #{time}"
  puts "#{datum.pretty_inspect}"
  puts
  puts "Press ctrl + d or type 'exit' to step forward in time."
  puts "Type 'exit!' to exit entirely."

  Ripl.start :binding => binding
end
